{"meta":{"title":"程式阿翰部落格","subtitle":"","description":"每天的一小步，就是日後的一大步","author":"John Chen","url":"https://www.ahan123.tw","root":"/"},"pages":[{"title":"categories","date":"2021-04-05T00:46:30.000Z","updated":"2021-04-10T07:17:00.018Z","comments":false,"path":"categories/index.html","permalink":"https://www.ahan123.tw/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"製作登入介面","slug":"login-interface","date":"2021-04-10T08:32:54.000Z","updated":"2021-04-10T08:34:37.914Z","comments":true,"path":"2021/04/10/login-interface/","link":"","permalink":"https://www.ahan123.tw/2021/04/10/login-interface/","excerpt":"&#x4E4B;&#x524D;&#x5E38;&#x5E38;&#x641E;&#x6DF7; v-model &#x8207; v-bind &#xFF0C;&#x4EE5;&#x81F4;&#x65BC;&#x5E38;&#x5E38;&#x64CD;&#x4F5C;&#x90FD;&#x6C92;&#x53CD;&#x61C9;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x7528;&#x806F;&#x60F3;&#x8A18;&#x61B6;&#x6CD5;&#xFF0C;&#x4EE5;&#x4E00;&#x500B;&#x53E3;&#x8A23;&#x4F86;&#x8A18;&#x61B6;&#x5B83;&#xFF0C;&#x5F8C;&#x4F86;&#x5C31;&#x4E0D;&#x5BB9;&#x6613;&#x641E;&#x6DF7;&#x4E86;&#xFF0C;&#x8A18;&#x61B6;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; v-model &#xFF08;&#x60F3;&#x8DDF;&#x6A21;&#x7279;&#x5152;&#x96D9;&#x5411;&#x4E92;&#x52D5;&#xFF09;&#x529F;&#x80FD;&#xFF1A;&#x96D9;&#x5411;&#x7D81;&#x5B9A;&#xFF1A;&#x64CD;&#x4F5C;&#x8CC7;&#x6599;&#x7528;&#xFF0C;&#x6C92;&#x7E2E;&#x5BEB; v-bind &#xFF08;&#x767C;&#x97F3;&#x4F3C;&#x300C;&#x6557;&#x7684;&#x300D;&#x3001;&#x300C;&#x8B8A;&#x7684;&#x300D;&#xFF0C;&#x8B8A;&#x4EC0;&#x9EBC;&#x5462;&#xFF1F;&#x8B8A;&#x5C6C;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x64CD;&#x4F5C; HTML &#x5C6C;&#x6027;&#xFF1A;&#x7E2E;&#x5BEB;&#x662F;&#x4E00;&#x500B;&#x5192;&#x865F;&#x300C; : &#x300D; &#x4FEE;&#x6539;&#x5099;&#x5FD8;router&#x52A0;&#x5165;&#x65B0;&#x7684; router &#x898F;&#x5247; router\\index.js1234567891011121314// &#x8F09;&#x5165;&#x5143;&#x4EF6;import Login from &apos;../components/pages/Login.vue&apos;// &#x5B9A;&#x7FA9; routerconst routes = [ { ... }, { path: &apos;/login&apos;, // &#x7DB2;&#x5740;&#x5C0F;&#x5BEB; name: &apos;Login&apos;, // &#x540D;&#x7A31;&#x5B57;&#x9996;&#x5927;&#x5BEB; component: Login }]","text":"&#x4E4B;&#x524D;&#x5E38;&#x5E38;&#x641E;&#x6DF7; v-model &#x8207; v-bind &#xFF0C;&#x4EE5;&#x81F4;&#x65BC;&#x5E38;&#x5E38;&#x64CD;&#x4F5C;&#x90FD;&#x6C92;&#x53CD;&#x61C9;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x7528;&#x806F;&#x60F3;&#x8A18;&#x61B6;&#x6CD5;&#xFF0C;&#x4EE5;&#x4E00;&#x500B;&#x53E3;&#x8A23;&#x4F86;&#x8A18;&#x61B6;&#x5B83;&#xFF0C;&#x5F8C;&#x4F86;&#x5C31;&#x4E0D;&#x5BB9;&#x6613;&#x641E;&#x6DF7;&#x4E86;&#xFF0C;&#x8A18;&#x61B6;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; v-model &#xFF08;&#x60F3;&#x8DDF;&#x6A21;&#x7279;&#x5152;&#x96D9;&#x5411;&#x4E92;&#x52D5;&#xFF09;&#x529F;&#x80FD;&#xFF1A;&#x96D9;&#x5411;&#x7D81;&#x5B9A;&#xFF1A;&#x64CD;&#x4F5C;&#x8CC7;&#x6599;&#x7528;&#xFF0C;&#x6C92;&#x7E2E;&#x5BEB; v-bind &#xFF08;&#x767C;&#x97F3;&#x4F3C;&#x300C;&#x6557;&#x7684;&#x300D;&#x3001;&#x300C;&#x8B8A;&#x7684;&#x300D;&#xFF0C;&#x8B8A;&#x4EC0;&#x9EBC;&#x5462;&#xFF1F;&#x8B8A;&#x5C6C;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x64CD;&#x4F5C; HTML &#x5C6C;&#x6027;&#xFF1A;&#x7E2E;&#x5BEB;&#x662F;&#x4E00;&#x500B;&#x5192;&#x865F;&#x300C; : &#x300D; &#x4FEE;&#x6539;&#x5099;&#x5FD8;router&#x52A0;&#x5165;&#x65B0;&#x7684; router &#x898F;&#x5247; router\\index.js1234567891011121314// &#x8F09;&#x5165;&#x5143;&#x4EF6;import Login from &apos;../components/pages/Login.vue&apos;// &#x5B9A;&#x7FA9; routerconst routes = [ { ... }, { path: &apos;/login&apos;, // &#x7DB2;&#x5740;&#x5C0F;&#x5BEB; name: &apos;Login&apos;, // &#x540D;&#x7A31;&#x5B57;&#x9996;&#x5927;&#x5BEB; component: Login }] Login.vue &#x5728; components\\pages &#x65B0;&#x589E; Login.vue&#xFF0C;HTML &#x8907;&#x88FD; BS &#x7684;signin &#x756B;&#x9762;&#x6A23;&#x5F0F; 1234567891011121314151617181920212223242526&lt;template&gt; &lt;div&gt; &lt;div class=&quot;form-signin&quot;&gt; &lt;form @submit.prevent=&quot;signin&quot;&gt; &lt;h1 class=&quot;h3 mb-3 fw-normal&quot;&gt;&#x8ACB;&#x5148;&#x767B;&#x5165;&lt;/h1&gt; &lt;div class=&quot;form-floating&quot;&gt; &lt;input type=&quot;email&quot; v-model=&quot;user.username&quot; class=&quot;form-control&quot; id=&quot;floatingInput&quot; placeholder=&quot;name@example.com&quot;&gt; &lt;label for=&quot;floatingInput&quot;&gt;Email&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;form-floating&quot;&gt; &lt;input type=&quot;password&quot; v-model=&quot;user.password&quot; class=&quot;form-control&quot; id=&quot;floatingPassword&quot; placeholder=&quot;Password&quot;&gt; &lt;label for=&quot;floatingPassword&quot;&gt;Password&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;checkbox mb-3&quot;&gt; &lt;label&gt; &lt;input type=&quot;checkbox&quot; value=&quot;remember-me&quot;&gt; Remember me &lt;/label&gt; &lt;/div&gt; &lt;button class=&quot;w-100 btn btn-lg btn-primary&quot; type=&quot;submit&quot;&gt;Sign in&lt;/button&gt; &lt;p class=&quot;mt-5 mb-3 text-muted&quot;&gt;&amp;copy; 2017&#x2013;2021&lt;/p&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template &#x8CBC;&#x4E0A; BS &#x7684; CSS&#xFF0C;&#x4E26;&#x8A2D;&#x70BA; scoped &#xFF0C;&#x9650;&#x5236;&#x53EA;&#x6709;&#x5728;&#x6B64; component &#x4F7F;&#x7528; 1&lt;style scoped&gt; &#x8A2D;&#x7F6E; signin &#x65B9;&#x6CD5; 12345678910111213141516171819202122232425262728&lt;script&gt;export default { data() { return { user: { username: &apos;&apos;, password: &apos;&apos;, } } }, methods: { signin() { const api = `${process.env.VUE_APP_APIPATH}/signin` const vm = this; this.$http.post(api, vm.user) // &#x50B3;&#x5165; username, password .then((response) =&gt; { console.log(response.data) // &#x5370;&#x51FA;&#x4F86;&#x770B;&#x770B;&#x7D50;&#x679C; // &#x5982;&#x679C;&#x767B;&#x5165;&#x6210;&#x529F;&#xFF0C;&#x5C31;&#x5C0E;&#x5165;&#x9996;&#x9801; if(response.data.success){ vm.$router.push(&apos;/&apos;) } }) } }}&lt;/script&gt; HelloWorld.vue template &#x52A0;&#x5165;&#x4E00;&#x884C;&#x9023;&#x7D50;&#xFF0C;&#x8A2D;&#x7F6E; v-on:click 12345&lt;template&gt; &lt;div class=&quot;hello&quot;&gt; &lt;a href=&quot;#&quot; @click.prevent=&quot;signout()&quot;&gt;Sign out&lt;/a&gt; &lt;/div&gt;&lt;/template&gt; &#x767B;&#x51FA;&#x65B9;&#x6CD5; 1234567891011121314151617181920&lt;script&gt;export default { name: &apos;HelloWorld&apos;, methods: { signout(){ const api = `${process.env.VUE_APP_APIPATH}/logout` const vm = this; this.$http.post(api) .then((response) =&gt; { console.log(response.data) if(response.data.success){ vm.$router.push(&apos;/login&apos;) // &#x5982;&#x679C;&#x767B;&#x51FA;&#xFF0C;&#x5C31;&#x8F49;&#x5230; login } }) } }}&lt;/script&gt;","categories":[{"name":"vue","slug":"vue","permalink":"https://www.ahan123.tw/categories/vue/"}],"tags":[]},{"title":"import bootstrap","slug":"import-bootstrap","date":"2021-04-10T08:26:56.000Z","updated":"2021-04-10T08:31:32.290Z","comments":true,"path":"2021/04/10/import-bootstrap/","link":"","permalink":"https://www.ahan123.tw/2021/04/10/import-bootstrap/","excerpt":"1. all.scss123@import &quot;~bootstrap/scss/functions&quot;;@import &quot;helpers/variables&quot;;@import &quot;~bootstrap/scss/bootstrap&quot;;","text":"1. all.scss123@import &quot;~bootstrap/scss/functions&quot;;@import &quot;helpers/variables&quot;;@import &quot;~bootstrap/scss/bootstrap&quot;; 2. app.vue &#x6539;&#x8DEF;&#x5F91;&#x5230;all.scss123&lt;style lang=&quot;scss&quot;&gt;@import &quot;assets/all.scss&quot;;&lt;/style&gt; 3. &#x589E;&#x52A0;BS&#x6309;&#x9215;123456789101112131415161718&lt;template&gt; &lt;div id=&quot;app&quot;&gt; &lt;div id=&quot;nav&quot;&gt; &lt;router-link to=&quot;/&quot;&gt;Home&lt;/router-link&gt; | &lt;router-link to=&quot;/about&quot;&gt;About&lt;/router-link&gt; &lt;/div&gt; &lt;router-view/&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Primary&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot;&gt;Secondary&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-success&quot;&gt;Success&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot;&gt;Danger&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-warning&quot;&gt;Warning&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-info&quot;&gt;Info&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-light&quot;&gt;Light&lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-dark&quot;&gt;Dark&lt;/button&gt; &lt;/div&gt;&lt;/template&gt; 4. _variable.scss &#x4FEE;&#x6539;&#x6A23;&#x5F0F;12345678910$blue: #007bff !default;$indigo: #6610f2 !default;$purple: #6f42c1 !default;$pink: #e83e8c !default;$red: #dc3545 !default;$orange: #fd7e14 !default;$yellow: #ffc107 !default;$green: #28a745 !default;$teal: #20c997 !default;$cyan: #17a2b8 !default; &#x6E2C;&#x8A66;&#x4E00;&#x4E0B;","categories":[{"name":"vue","slug":"vue","permalink":"https://www.ahan123.tw/categories/vue/"}],"tags":[]},{"title":"Hexo 基本操作","slug":"2021-04-10-Hexo-basic","date":"2021-04-10T07:02:25.000Z","updated":"2021-04-10T07:17:00.016Z","comments":true,"path":"2021/04/10/2021-04-10-Hexo-basic/","link":"","permalink":"https://www.ahan123.tw/2021/04/10/2021-04-10-Hexo-basic/","excerpt":"安裝1$ hexo init [folder] 如果沒有指定，會在目前資料夾建立網站","text":"安裝1$ hexo init [folder] 如果沒有指定，會在目前資料夾建立網站 新增文章1hexo new &lt;postName&gt; 產生靜態檔案會產生 public 目錄，如果執行 hexo deploy 部署，就會將這個目錄底下的內容上傳。 123$ hexo generate或$ hexo g 啟動本機伺服器123$ hexo server或$ hexo s 部署網站123$ hexo deploy或$ hexo d 清除快取檔案(db.json)，並刪除已產生的靜態檔案(public) 如果發現任何修改都不生效，可以執行這個指令。 1$ hexo clean 🌎 Resources 參考網址：https://wst24365888.github.io/hexo-site/ 官方指令：https://hexo.io/zh-tw/docs/commands.html#init 寫作：https://hexo.io/zh-tw/docs/tag-plugins","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.ahan123.tw/tags/hexo/"}]},{"title":"Hexo 前言","slug":"2021-04-10-hexo-intro","date":"2021-04-10T06:00:19.000Z","updated":"2021-04-10T07:17:00.017Z","comments":true,"path":"2021/04/10/2021-04-10-hexo-intro/","link":"","permalink":"https://www.ahan123.tw/2021/04/10/2021-04-10-hexo-intro/","excerpt":"","text":"Hexo 是一個透過指令生成的靜態網頁，主要採用 Markdown 格式編寫文章。因為純靜態的特性，所以可以架設在如 Github 之類的免費平台，透過指令操作與支援 .md 文章，與工程師的使用習慣相符，所以吸引許多人使用。 我習慣使用 Notion 做學習筆記，所以學習架設 Hexo ，並將我的筆記經過彙編，發表為部落格文章。透過整理學習心得的過程，強化自己學到的知識，也分享自己的經驗給更多人。","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.ahan123.tw/tags/Hexo/"}]},{"title":"Create a new vue cli","slug":"2021-04-10-Create-a-new-vue-cli","date":"2021-04-10T02:42:22.000Z","updated":"2021-04-10T07:17:00.013Z","comments":true,"path":"2021/04/10/2021-04-10-Create-a-new-vue-cli/","link":"","permalink":"https://www.ahan123.tw/2021/04/10/2021-04-10-Create-a-new-vue-cli/","excerpt":"安裝 Vue Cli課程是以 vue-cli 2 的版本，如果是這個版本，可以執行以下： 1$ vue init webpack &lt;project name&gt;","text":"安裝 Vue Cli課程是以 vue-cli 2 的版本，如果是這個版本，可以執行以下： 1$ vue init webpack &lt;project name&gt; 如果你跟我一樣裝了 vue cli3 ，可以使用 vue create &lt;專案名&gt;，安裝時可選擇 vue 2 版本 1234$ vue create &lt;project name&gt;// 執行npm run serve 註：npm run dev 跟 npm run serve 只是在 package.json 裡的名稱不同而已 安裝 Bootstrap node-sass sass-loader1$ npm install bootstrap node-sass sass-loader --save 測試 scss 有沒有裝好 app.vue1234567&lt;style lang=&quot;scss&quot;&gt; $color: black; body &#123; background-color: $color; &#125;&lt;/style&gt; style裡改用 @import 方式引入 BS，放入 BS HTML 元件看效果 123456789101112131415161718192021222324252627282930&lt;template&gt; &lt;div id=&quot;app&quot;&gt;&lt;!-- 要顯示的內容一定要放在 #app 裡面 --&gt; &lt;div id=&quot;nav&quot;&gt; &lt;router-link to=&quot;/&quot;&gt;Home&lt;/router-link&gt; | &lt;router-link to=&quot;/about&quot;&gt;About&lt;/router-link&gt; &lt;/div&gt; &lt;router-view/&gt; &lt;div class=&quot;card&quot; style=&quot;width: 18rem;&quot;&gt; &lt;div class=&quot;card-body&quot;&gt; &lt;h5 class=&quot;card-title&quot;&gt;Card title&lt;/h5&gt; &lt;p class=&quot;card-text&quot;&gt;Some quick example text to build on the card title and make up the bulk of the card&#x27;s content.&lt;/p&gt; &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Go somewhere&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 要顯示的內容一定要放在 #app 裡面 --&gt; &lt;/div&gt;&lt;/template&gt;&lt;style lang=&quot;scss&quot;&gt;@import &quot;~bootstrap/scss/bootstrap&quot;;&lt;/style&gt; 在 HelloWorld.vue 上有 scoped 限制樣式只能在該元件上 1&lt;style scoped lang=&quot;scss&quot;&gt; install axiosurl: https://www.npmjs.com/package/vue-axios 1$ npm install --save axios vue-axios at main.js import main.js1234import axios from &#x27;axios&#x27;import VueAxios from &#x27;vue-axios&#x27;// useVue.use(VueAxios, axios) 如果你不小心安裝了 es-lint ，運行時出現提示應修正錯誤，可以用以下指令查找主要錯誤的地方。 顯示主要錯誤（忽略prettier） 123456789101112131415npm run lint --fix&gt; vue-shop@0.1.0 lint&gt; vue-cli-service linterror: &#x27;HelloWorld&#x27; is defined but never used (no-unused-vars) at src/App.vue:29:8: 27 | 28 | &lt;script&gt;&gt; 29 | import HelloWorld from &quot;./components/HelloWorld&quot;; | ^ 30 | 31 | export default &#123; 32 | name: &quot;App&quot;,1 error found. 如果修正錯誤後沒有問題，則會出現… 123456npm run lint --fix&gt; vue-shop@0.1.0 lint&gt; vue-cli-service lint DONE No lint errors found! 使用 axios 12345678910&lt;script&gt;export default &#123; name: &quot;App&quot;, created() &#123; // 我不小心打成 create() 測試半天才找到原因 this.$http.get(&quot;https://randomuser.me/api/&quot;).then((response) =&gt; &#123; console.log(response); &#125;); &#125;,&#125;;&lt;/script&gt; 增加自訂 API 路徑就是我們申請的自訂 API 路徑。課程說要修改 config\\ 目錄下的設定檔，增加 API 常數，但使用新版本 Vue Cli3 在根目錄中已經沒有 config 、build 等目錄，如果要加常數，要在「根目錄」加入「.env」檔案，內容為： 1常數名稱=value 常數一定要以 VUE_APP_ 為前置命名，例如： 12345VUE_APP_&#123;variable name&#125;=valueexample:VUE_APP_APIPATH=https://vue-course-api.herokuapp.comVUE_APP_CUSTOMPATH=joe 改完要重新運行服務才會生效。據網上資料，如果輸出常數得到 undefined ，可能原因有三種： .env 沒在根目錄，如在 /src 要以 VUE_APP_ 開頭，如果沒有，也會出現 undefined 改完要重啟服務 npm run serve 組合 api 路徑，測試是否正常app.vue123456789101112&lt;script&gt;export default &#123; created()&#123; const api = `$&#123;process.env.VUE_APP_APIPATH&#125;/api/$&#123;process.env.VUE_APP_CUSTOMPATH&#125;/products` this.$http.get(api) .then((response) =&gt;&#123; console.log(response) &#125;) &#125;&#125;&lt;/script&gt; 得到結果： 🌍 Resources|D2| Vue CLI3 安裝與建立 vue 專案 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天https://ithelp.ithome.com.tw/articles/10216606 解讀 vue-cli 腳手架（一）：npm run dev的背後 - IT閱讀https://www.itread01.com/content/1550372949.html","categories":[{"name":"vue","slug":"vue","permalink":"https://www.ahan123.tw/categories/vue/"}],"tags":[]},{"title":"Vue出一個電商網站-前言","slug":"2021-04-05-Hexschool-vue-class-started","date":"2021-04-05T00:29:38.000Z","updated":"2021-04-10T07:17:00.012Z","comments":true,"path":"2021/04/05/2021-04-05-Hexschool-vue-class-started/","link":"","permalink":"https://www.ahan123.tw/2021/04/05/2021-04-05-Hexschool-vue-class-started/","excerpt":"本欄目是紀錄我學習「六角學院」的「Vue出一個電商網站」線上課程的過程，僅包含實做電商的部分。 學習的過程用文字記錄下來，除了可以做為備忘以外，最重要的是可以藉由整理的過程，條理自己已經學到的東西，如果可以同時發表在部落格，更會因為要對別人說明而寫得清楚，對固化自己的學習內容更加有幫助。","text":"本欄目是紀錄我學習「六角學院」的「Vue出一個電商網站」線上課程的過程，僅包含實做電商的部分。 學習的過程用文字記錄下來，除了可以做為備忘以外，最重要的是可以藉由整理的過程，條理自己已經學到的東西，如果可以同時發表在部落格，更會因為要對別人說明而寫得清楚，對固化自己的學習內容更加有幫助。 以前我學習課程沒有紀錄筆記的習慣，後來發現面對簡單的課程沒有太大的問題，但是如果遇到比較複雜的內容，就容易記了又忘，或不停踩著已經踩過的雷，從長遠來看，不寫筆記反而才是事倍功半。 為了能夠發表在部落格上，我特地學習了 Hexo ，將部落格架設在 Github 上，並申請了一個新的 Domain ，名為「 ahan123.tw」，也就是「阿翰 123」，阿翰是我的小名，而「 123 」代表的是，任何學習都是從基礎開始，最初開始的頭一、二、三步最為重要，如果站穩了，往後的成長將會更為順利，這就是我命名這個 Domain 的由來。 ● 課程網址：https://courses.hexschool.com/p/vue ● 上課網址(需登入)：https://courses.hexschool.com/courses/enrolled/670031 課程資源 課程練習 API 申請：https://vue-course-api.hexschool.io/ 登入及驗證 API 說明：https://github.com/hexschool/vue-course-api-wiki/wiki/登入及驗證 進度 Commit(有問題可看老師的代碼)：https://github.com/hexschool/vue-course-api-wiki/wiki/進度-Commit 課程部分模板：https://github.com/hexschool/vue-course-api-wiki/wiki/課程部分模板 Vue API 課程補充說明：https://paper.dropbox.com/doc/Vue-API-28OrjdvBouPMjspZUM7h7 其他資源 Bootstrap 5 文件：https://getbootstrap.com/docs/5.0/getting-started/introduction/ Bootstrap Examples：https://getbootstrap.com/docs/5.0/examples/","categories":[{"name":"vue","slug":"vue","permalink":"https://www.ahan123.tw/categories/vue/"}],"tags":[]}],"categories":[{"name":"vue","slug":"vue","permalink":"https://www.ahan123.tw/categories/vue/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.ahan123.tw/tags/hexo/"},{"name":"Hexo","slug":"Hexo","permalink":"https://www.ahan123.tw/tags/Hexo/"}]}